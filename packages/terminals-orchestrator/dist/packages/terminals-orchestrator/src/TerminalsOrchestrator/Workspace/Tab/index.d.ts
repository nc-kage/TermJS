import { TemplateEngine } from '@term-js/term';
import ITab from '@TerminalsOrchestrator/Workspace/Tab/ITab';
import { EventHandlerType, TabOptionsType, EventType } from '@TerminalsOrchestrator/Workspace/Tab/types';
declare class Tab extends TemplateEngine implements ITab {
    get editableTitle(): boolean;
    set editableTitle(val: boolean);
    private shortcutIndexField;
    set shortcutIndex(val: number);
    get shortcutIndex(): number;
    private indexField;
    set index(val: number);
    get index(): number;
    get width(): number;
    private titleField;
    set title(val: string);
    get title(): string;
    private isActive;
    set active(val: boolean);
    get active(): boolean;
    private isInvisible;
    set invisible(val: boolean);
    get invisible(): boolean;
    private isHiddenField;
    set hidden(val: boolean);
    get hidden(): boolean;
    private leftField;
    get left(): number;
    set left(val: number);
    private disabledHoverField;
    get disabledHover(): boolean;
    set disabledHover(val: boolean);
    private get shortcut();
    private handlers;
    private readonly emitter;
    private options;
    private titleInput;
    constructor(container: HTMLElement, options: TabOptionsType);
    render(): void;
    addEventListener(event: EventType, handler: EventHandlerType): void;
    removeEventListener(event: EventType, handler: EventHandlerType): void;
    destroy(): void;
    private addListeners;
    private removeListeners;
    private rename;
    private clickHandler;
    private keyboardSelectHandler;
    private closeHandler;
    private dragStartHandler;
    private dragHandler;
    private dragEndHandler;
    private dragoverHandler;
    private submitTitleHandler;
}
export default Tab;
